const mongoose = require('mongoose'); // âœ… Import mongoose first

const lawyerSchema = new mongoose.Schema({
  firstName: { type: String, required: true },
  lastName: { type: String, required: true },
  email: { type: String, required: true, unique: true },
  phone: { type: String, default: '' },
  barRegistrationNumber: { type: String},
  yearsOfExperience: { type: Number, default: 0 },
  password: { type: String, required: true },
  practiceAreas: { type: [String], default: [] },
  workingHours: { type: Object, default: {} },
  onlineStatus: { type: Boolean, default: false },
  status: {type: String,enum: ['pending', 'verified', 'rejected'],default: 'pending'},
  profilepic:{type:Array},
  gender:{type:String},
  dob:{type:String},
  alternet_contact:{type:String},
  residential_address:{type:String},
  state:{type:String},
  city:{type:String},
  pin_code:{type:String},
  corrosponding_address:{type:String},
  degree:{type:Array},
  university:{type:Array},
  certificate:{type:Array},
  yearofgraduation:{type:Array},
  barEnrolment:{type:String},
  barState:{type:String},
  barYear:{type:String},
  barCertificate:{type:Array},
  aibeNo:{type:String},
  aibeCertificate:{type:Array},
  specializations:{type:Array},
  languages:{type:Array},
  practicingcourts:{type:Array},
  practice_type:{type:String},
  lawfarm_name:{type:String},
  office_address:{type:String},
  bar_membership:{type:String},
  proofofpractice:{type:Array},
  professional_bio:{type:String},
  identity_proof:{type:Array},
  identity_number:{type:Array},
  identity_pic:{type:Array},
  address_proof:{type:Array},
  address_pic:{type:Array},
  consultation_fee_charged:{type:String},
  consultation_fee_start_condition:{type:String},
  consultation_fee:{type:String},
  available_days:{type:Array},
  available_from:{type:String},
  available_to:{type:String},
  consultation_mode:{type:Array},
  account_holder_name:{type:String},
  bank_name:{type:String},
  account_number:{type:String},
  ifsc_code:{type:String},
  cancelled_cheque:{type:Array},
  declaration_authenticity:{type:String},
  consent_verification:{type:String},
  accept_terms:{type:String},
                                        
                                     
  isVerified: { type: Boolean, default: false },
  verificationHistory: [
    {
      adminId: { type: mongoose.Schema.Types.ObjectId, ref: 'Admin' },
      action: { type: String, enum: ['approved', 'rejected'] },
      reason: String,
      timestamp: { type: Date, default: Date.now }
    }
  ]
}, { timestamps: true });

module.exports = mongoose.model('Lawyer', lawyerSchema);
